git config --global user.name
git config --global user.email
git config --global color.ui auto
git config --global merge.conflictstyle diff3
git config --list
git init
git clone
git status
git log
git log --oneline
git log --stat
git log -p
git show
git add
git commit
git commit -m "Initial commit"
git diff
git tag -a v1.0
git tag -d v1.0
git tag -a v1.0 SHA
git log --decorate
git branch
git checkout
git branch -d sidebar e.g.
git branch -D sidebar
git log --online --graph --all
git reset --hard HEAD^ ----- undo the merge
git merge
git commit --amend
git revert
git reset
git reset --mixed
git reset --soft
git reset --hard
git reflog
git push
git pull
git shortlog
git shortlog -s -n
git log --author=Paul
git log --grep=bug
git remote
git remote -v
git remote add + name + a link to source repo.
git rebase -i HEAD~3
git push -f
git rebase (-p,-r,-e,-s,-f,-x,-d)


This part is copied from "MyNotes" folder in "CompuWiser"
Note that some orders will be rebeated!!!
Link to this "https://github.com/CompuWiser/MyNotes"

git config --global user.name "<Your Full Name>"
git config --global user.email "<your-email-address>"
git config --list
git clone <Project-URL> <optinal-new-name>
git status

git log  
git log --oneline  
git log --stat          #show the how many files were changed and the number of lines that were added/removed  
git log -p || --patch  
git log -p --stat  
git log -p -w           #ignore white-space  
git log -p fdf5493      #show log starting from this commit  
git show                #show last commit, show same info as git log -p  
git show fdf5493  
git show --stat  
git show -w  
git add <file1> <file2> â€¦ <fileN>  
git add .  
git rm --cached <file-name>  
git commit  
git commit -m 'commit message'  
git commit (-a -m || -am) 'commit message'  
git diff  git tag (-a || --annotate) <tag>  
git tag -a <tag> <sha>  
git tag (-d || --delete) <tag>  
git tag
git branch  
git branch <new-branch-name>  
git branch <new-branch-name> <sha>  
git branch -d <branch-name>  
git branch -D <branch-name>  
git checkout <banch-name>  
git checkout -b <branch-name> <from>  
git log --oneline --decorate --graph --all  
git merge <name-of-branch-to-merge-in>  
git commit --amend  
git revert <sha>  
git reset (--soft || --hard)<reference-to-commit>  
git remote  
git remote -v  
git remote add <remote-name> <remote-address>  
git push -u <remote-name> <local-branch-name>  
git push -f <remote-name> <local-branch-name>	#f: force
git pull <remote-name> <branch-to-pull>  
git fetch <remote-name> <branch-to-pull>  
git shortlog
git shortlog -s -n
git log --autor=<name-part>
git show <sha>
git log --grep=<regex>
git remote rename <old-name> <new-name>
git rebase -i HEAD~3		#i: interactive

